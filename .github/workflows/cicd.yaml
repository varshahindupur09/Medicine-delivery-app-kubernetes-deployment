name: CI/CD Pipeline for AWS ECR and EKS

on:
  push:
    branches:
      - main  # Trigger pipeline on pushes to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger pipeline on pull requests to the 'main' branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      ECR_REGISTRY: 381491906666.dkr.ecr.us-east-1.amazonaws.com
      ECR_FRONTEND_REPO: medicine-frontend
      ECR_BACKEND_REPO: medicine-backend
      K8S_NAMESPACE: default

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REGISTRY

      # Step 4: Build and push backend image to ECR
      - name: Build and push backend image
        run: |
          docker buildx create --use || true
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t $ECR_REGISTRY/$ECR_BACKEND_REPO:multiarch --push ./backend

      # Step 5: Build and push frontend image to ECR
      - name: Build and push frontend image
        run: |
          docker buildx create --use || true
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t $ECR_REGISTRY/$ECR_FRONTEND_REPO:multiarch --push ./frontend

      # Step 6: Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.31.2/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/

      # Step 7: Install eksctl
      - name: Install eksctl
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin/
          eksctl version

      # Step 8: Configure kubeconfig for EKS
      - name: Configure kubeconfig
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

      # Step 9: Deploy backend to Kubernetes
      - name: Deploy backend
        run: |
          kubectl apply -f backend/backend-deployment.yaml
          kubectl apply -f backend/backend-service.yaml

      # Step 10: Deploy frontend to Kubernetes
      - name: Deploy frontend
        run: |
          kubectl apply -f frontend/frontend-deployment.yaml
          kubectl apply -f frontend/frontend-service.yaml

      # Step 11: Verify deployment
      - name: Verify Pods and Services
        run: |
          kubectl get pods -n $K8S_NAMESPACE
          kubectl get services -n $K8S_NAMESPACE

      # Step 12: Wait for services to become available
      - name: Wait for services
        run: |
          kubectl wait --for=condition=available --timeout=120s deployment/frontend-deployment -n $K8S_NAMESPACE
          kubectl wait --for=condition=available --timeout=120s deployment/backend-deployment -n $K8S_NAMESPACE
